name: Upload Release Asset
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    name: Upload Release Asset
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
         restore-keys: |
          ${{ runner.os }}-cargo-
         path: |
          /usr/local/bin/rustup
          ~/.cargo
          target
      - name: Install linker 
        run: sudo apt-get install gcc-aarch64-linux-gnu

      - name: setup Setup
        run: |
          ./scripts/get_substrate.sh --fast
          rustup target add aarch64-unknown-linux-gnu --toolchain nightly-2020-11-15

      - name: build release for architecture
        run: |
          cargo build --release --target=aarch64-unknown-linux-gnu

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Release ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: /target/
          asset_name: release
          asset_content_type: application/zip

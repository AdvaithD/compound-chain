name: Upload Release Asset
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    name: Upload Release Asset
    steps:
      - uses: actions/checkout@v2
      - name: build release for architecture
        uses: uraimo/run-on-arch-action@v2.0.8
        id: buildit
        with: 
          arch: aarch64
          distro: ubuntu18.04
          githubToken: ${{ github.token }} # Not required, but speeds up builds
          setup: |
            mkdir -p "${PWD}/artifacts"
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts" 
          install:
            apt update &&
            apt install -y cmake pkg-config libssl-dev git gcc build-essential git clang libclang-dev curl &&
            curl https://sh.rustup.rs | sh -s -- -y &&
            source $HOME/.cargo/env &&
            rustup toolchain install nightly &&
            rustup update nightly &&
            rustup target add wasm32-unknown-unknown --toolchain nightly
          run: |
            source $HOME/.cargo/env
            cargo +nightly build --release 
            cp -R target/release/ /artifacts/compound-chain-release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Release ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: /artifacts/
          asset_name: compound-chain-release
          asset_content_type: application/zip
